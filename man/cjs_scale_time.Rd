% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cjs_scale_time.R
\name{cjs_scale_time}
\alias{cjs_scale_time}
\title{Cartesian (continuous) scale options}
\usage{
cjs_scale_time(
  p,
  id,
  type = "time",
  alignToPixels = FALSE,
  backgroundColor = NULL,
  border = cjs_border(),
  display = TRUE,
  grid = cjs_grid(),
  min = NULL,
  max = NULL,
  reverse = FALSE,
  stacked = FALSE,
  suggestedMax = NULL,
  suggestedMin = NULL,
  ticks = cjs_ticks(),
  weight = 0,
  bounds = "ticks",
  position = NULL,
  stack = NULL,
  stackWeight = 1,
  axis = NULL,
  offset = TRUE,
  title.text = "",
  title.display = FALSE,
  title.align = "center",
  title.color = htmlwidgets::JS("Chart.defaults.color"),
  title.font = htmlwidgets::JS("Chart.defaults.font"),
  title.padding = 4,
  adapters.date = NULL,
  offsetAfterAutoskip = FALSE,
  ticks.source = "auto",
  time.displayFormats = NULL,
  time.isoWeekday = FALSE,
  time.parser = NULL,
  time.round = FALSE,
  time.tooltipFormat = NULL,
  time.unit = FALSE,
  time.minUnit = "millisecond"
)
}
\arguments{
\item{p}{plot}

\item{id}{axis id}

\item{type}{string Type of scale being employed. Custom scales can be created and registered with a string key. This allows changing the type of an axis for a chart.}

\item{alignToPixels}{boolean FALSE Align pixel values to device pixels.}

\item{backgroundColor}{Color Background color of the scale area.}

\item{border}{object Border configuration. See \code{cjs_border()}}

\item{display}{boolean|string TRUE Controls the axis global visibility (visible when true, hidden when false). When display: 'auto', the axis is visible only if at least one associated dataset is visible.}

\item{grid}{object Grid line configuration. See \code{cjs_grid()}}

\item{min}{number User defined minimum number for the scale, overrides minimum value from data. more...}

\item{max}{number User defined maximum number for the scale, overrides maximum value from data. more...}

\item{reverse}{boolean FALSE Reverse the scale.}

\item{stacked}{boolean|string FALSE Should the data be stacked. more...}

\item{suggestedMax}{number Adjustment used when calculating the maximum data value. more...}

\item{suggestedMin}{number Adjustment used when calculating the minimum data value. more...}

\item{ticks}{object Tick configuration. See \code{cjs_ticks()}}

\item{weight}{number 0 The weight used to sort the axis. Higher weights are further away from the chart area.}

\item{bounds}{string 'data' Determines the scale bounds. more...}

\item{position}{string | object  Position of the axis. more...}

\item{stack}{string  Stack group. Axes at the same position with same stack are stacked.}

\item{stackWeight}{number 1 Weight of the scale in stack group. Used to determine the amount of allocated space for the scale within the group.}

\item{axis}{string  Which type of axis this is. Possible values are: 'x', 'y'. If not set, this is inferred from the first character of the ID which should be 'x' or 'y'.}

\item{offset}{boolean FALSE If true, extra space is added to the both edges and the axis is scaled to fit into the chart area. This is set to true for a bar chart by default.}

\item{title.text}{The text for the title. (i.e. "# of People" or "Response Choices").}

\item{title.display}{boolean, if title.text is something other than "" then this will be automatically set to TRUE}

\item{title.align}{Alignment of the axis title. Possible options are 'start', 'center' and 'end'}

\item{title.color}{color of label, defaults to htmlwidgets::JS('Chart.defaults.color'),}

\item{title.font}{color of the font, defaults to htmlwidgets::JS('Chart.defaults.font'),}

\item{title.padding}{Padding to apply around scale labels. Only top, bottom and y are implemented.}

\item{adapters.date}{object {} Options for adapter for external date library if that adapter needs or supports options}

\item{offsetAfterAutoskip}{boolean FALSE If true, bar chart offsets are computed with auto skipped ticks.}

\item{ticks.source}{string 'auto' How ticks are generated. more...}

\item{time.displayFormats}{object  Sets how different time units are displayed. more...}

\item{time.isoWeekday}{boolean|number FALSE If boolean and true and the unit is set to 'week', then the first day of the week will be Monday. Otherwise, it will be Sunday. If number, the index of the first day of the week (0 - Sunday, 6 - Saturday)}

\item{time.parser}{string|function  Custom parser for dates. more...}

\item{time.round}{string FALSE If defined, dates will be rounded to the start of this unit. See Time Units below for the allowed units.}

\item{time.tooltipFormat}{string  The format string to use for the tooltip.}

\item{time.unit}{string FALSE If defined, will force the unit to be a certain type. See Time Units section below for details.}

\item{time.minUnit}{string 'millisecond' The minimum display format to be used for a time unit.}
}
\description{
Common options to all cartesian axes. Namespace: \code{options.scales[scaleId]}.
Datetimes require an addition plugin for \code{chartjs}, and \code{chartjs-adapter-date-fns}
is included in this package (https://github.com/chartjs/chartjs-adapter-date-fns),
which comes from \verb{https://date-fns.org/} https://date-fns.org/v2.29.3/docs/format
}
